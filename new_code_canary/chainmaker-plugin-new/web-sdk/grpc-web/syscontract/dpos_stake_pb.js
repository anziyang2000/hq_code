// source: syscontract/dpos_stake.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.syscontract.BondStatus', null, global);
goog.exportSymbol('proto.syscontract.DPoSStakeFunction', null, global);
goog.exportSymbol('proto.syscontract.Delegation', null, global);
goog.exportSymbol('proto.syscontract.DelegationInfo', null, global);
goog.exportSymbol('proto.syscontract.Epoch', null, global);
goog.exportSymbol('proto.syscontract.UnbondingDelegation', null, global);
goog.exportSymbol('proto.syscontract.UnbondingDelegationEntry', null, global);
goog.exportSymbol('proto.syscontract.Validator', null, global);
goog.exportSymbol('proto.syscontract.ValidatorVector', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syscontract.Epoch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.syscontract.Epoch.repeatedFields_, null);
};
goog.inherits(proto.syscontract.Epoch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.syscontract.Epoch.displayName = 'proto.syscontract.Epoch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syscontract.Validator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syscontract.Validator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.syscontract.Validator.displayName = 'proto.syscontract.Validator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syscontract.Delegation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syscontract.Delegation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.syscontract.Delegation.displayName = 'proto.syscontract.Delegation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syscontract.UnbondingDelegation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.syscontract.UnbondingDelegation.repeatedFields_, null);
};
goog.inherits(proto.syscontract.UnbondingDelegation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.syscontract.UnbondingDelegation.displayName = 'proto.syscontract.UnbondingDelegation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syscontract.UnbondingDelegationEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syscontract.UnbondingDelegationEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.syscontract.UnbondingDelegationEntry.displayName = 'proto.syscontract.UnbondingDelegationEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syscontract.ValidatorVector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.syscontract.ValidatorVector.repeatedFields_, null);
};
goog.inherits(proto.syscontract.ValidatorVector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.syscontract.ValidatorVector.displayName = 'proto.syscontract.ValidatorVector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syscontract.DelegationInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.syscontract.DelegationInfo.repeatedFields_, null);
};
goog.inherits(proto.syscontract.DelegationInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.syscontract.DelegationInfo.displayName = 'proto.syscontract.DelegationInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.syscontract.Epoch.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syscontract.Epoch.prototype.toObject = function(opt_includeInstance) {
  return proto.syscontract.Epoch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syscontract.Epoch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.Epoch.toObject = function(includeInstance, msg) {
  var f, obj = {
    epochId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    proposerVectorList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    nextEpochCreateHeight: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syscontract.Epoch}
 */
proto.syscontract.Epoch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syscontract.Epoch;
  return proto.syscontract.Epoch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syscontract.Epoch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syscontract.Epoch}
 */
proto.syscontract.Epoch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEpochId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addProposerVector(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNextEpochCreateHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syscontract.Epoch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syscontract.Epoch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syscontract.Epoch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.Epoch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpochId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getProposerVectorList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getNextEpochCreateHeight();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 epoch_id = 1;
 * @return {number}
 */
proto.syscontract.Epoch.prototype.getEpochId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.syscontract.Epoch} returns this
 */
proto.syscontract.Epoch.prototype.setEpochId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string proposer_vector = 2;
 * @return {!Array<string>}
 */
proto.syscontract.Epoch.prototype.getProposerVectorList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.syscontract.Epoch} returns this
 */
proto.syscontract.Epoch.prototype.setProposerVectorList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.syscontract.Epoch} returns this
 */
proto.syscontract.Epoch.prototype.addProposerVector = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.syscontract.Epoch} returns this
 */
proto.syscontract.Epoch.prototype.clearProposerVectorList = function() {
  return this.setProposerVectorList([]);
};


/**
 * optional uint64 next_epoch_create_height = 3;
 * @return {number}
 */
proto.syscontract.Epoch.prototype.getNextEpochCreateHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.syscontract.Epoch} returns this
 */
proto.syscontract.Epoch.prototype.setNextEpochCreateHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syscontract.Validator.prototype.toObject = function(opt_includeInstance) {
  return proto.syscontract.Validator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syscontract.Validator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.Validator.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    jailed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tokens: jspb.Message.getFieldWithDefault(msg, 4, ""),
    delegatorShares: jspb.Message.getFieldWithDefault(msg, 5, ""),
    unbondingEpochId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    unbondingCompletionEpochId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    selfDelegation: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syscontract.Validator}
 */
proto.syscontract.Validator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syscontract.Validator;
  return proto.syscontract.Validator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syscontract.Validator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syscontract.Validator}
 */
proto.syscontract.Validator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorAddress(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJailed(value);
      break;
    case 3:
      var value = /** @type {!proto.syscontract.BondStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokens(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorShares(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnbondingEpochId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnbondingCompletionEpochId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelfDelegation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syscontract.Validator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syscontract.Validator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syscontract.Validator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.Validator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJailed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getTokens();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDelegatorShares();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUnbondingEpochId();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getUnbondingCompletionEpochId();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getSelfDelegation();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string validator_address = 1;
 * @return {string}
 */
proto.syscontract.Validator.prototype.getValidatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.Validator} returns this
 */
proto.syscontract.Validator.prototype.setValidatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool jailed = 2;
 * @return {boolean}
 */
proto.syscontract.Validator.prototype.getJailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.syscontract.Validator} returns this
 */
proto.syscontract.Validator.prototype.setJailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional BondStatus status = 3;
 * @return {!proto.syscontract.BondStatus}
 */
proto.syscontract.Validator.prototype.getStatus = function() {
  return /** @type {!proto.syscontract.BondStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.syscontract.BondStatus} value
 * @return {!proto.syscontract.Validator} returns this
 */
proto.syscontract.Validator.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string tokens = 4;
 * @return {string}
 */
proto.syscontract.Validator.prototype.getTokens = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.Validator} returns this
 */
proto.syscontract.Validator.prototype.setTokens = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string delegator_shares = 5;
 * @return {string}
 */
proto.syscontract.Validator.prototype.getDelegatorShares = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.Validator} returns this
 */
proto.syscontract.Validator.prototype.setDelegatorShares = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 unbonding_epoch_id = 6;
 * @return {number}
 */
proto.syscontract.Validator.prototype.getUnbondingEpochId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.syscontract.Validator} returns this
 */
proto.syscontract.Validator.prototype.setUnbondingEpochId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 unbonding_completion_epoch_id = 7;
 * @return {number}
 */
proto.syscontract.Validator.prototype.getUnbondingCompletionEpochId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.syscontract.Validator} returns this
 */
proto.syscontract.Validator.prototype.setUnbondingCompletionEpochId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string self_delegation = 8;
 * @return {string}
 */
proto.syscontract.Validator.prototype.getSelfDelegation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.Validator} returns this
 */
proto.syscontract.Validator.prototype.setSelfDelegation = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syscontract.Delegation.prototype.toObject = function(opt_includeInstance) {
  return proto.syscontract.Delegation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syscontract.Delegation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.Delegation.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    validatorAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    shares: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syscontract.Delegation}
 */
proto.syscontract.Delegation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syscontract.Delegation;
  return proto.syscontract.Delegation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syscontract.Delegation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syscontract.Delegation}
 */
proto.syscontract.Delegation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShares(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syscontract.Delegation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syscontract.Delegation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syscontract.Delegation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.Delegation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValidatorAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShares();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.syscontract.Delegation.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.Delegation} returns this
 */
proto.syscontract.Delegation.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string validator_address = 2;
 * @return {string}
 */
proto.syscontract.Delegation.prototype.getValidatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.Delegation} returns this
 */
proto.syscontract.Delegation.prototype.setValidatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string shares = 3;
 * @return {string}
 */
proto.syscontract.Delegation.prototype.getShares = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.Delegation} returns this
 */
proto.syscontract.Delegation.prototype.setShares = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.syscontract.UnbondingDelegation.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syscontract.UnbondingDelegation.prototype.toObject = function(opt_includeInstance) {
  return proto.syscontract.UnbondingDelegation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syscontract.UnbondingDelegation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.UnbondingDelegation.toObject = function(includeInstance, msg) {
  var f, obj = {
    epochId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    validatorAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.syscontract.UnbondingDelegationEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syscontract.UnbondingDelegation}
 */
proto.syscontract.UnbondingDelegation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syscontract.UnbondingDelegation;
  return proto.syscontract.UnbondingDelegation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syscontract.UnbondingDelegation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syscontract.UnbondingDelegation}
 */
proto.syscontract.UnbondingDelegation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpochId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorAddress(value);
      break;
    case 4:
      var value = new proto.syscontract.UnbondingDelegationEntry;
      reader.readMessage(value,proto.syscontract.UnbondingDelegationEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syscontract.UnbondingDelegation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syscontract.UnbondingDelegation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syscontract.UnbondingDelegation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.UnbondingDelegation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpochId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValidatorAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.syscontract.UnbondingDelegationEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional string epoch_id = 1;
 * @return {string}
 */
proto.syscontract.UnbondingDelegation.prototype.getEpochId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.UnbondingDelegation} returns this
 */
proto.syscontract.UnbondingDelegation.prototype.setEpochId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string delegator_address = 2;
 * @return {string}
 */
proto.syscontract.UnbondingDelegation.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.UnbondingDelegation} returns this
 */
proto.syscontract.UnbondingDelegation.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string validator_address = 3;
 * @return {string}
 */
proto.syscontract.UnbondingDelegation.prototype.getValidatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.UnbondingDelegation} returns this
 */
proto.syscontract.UnbondingDelegation.prototype.setValidatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated UnbondingDelegationEntry entries = 4;
 * @return {!Array<!proto.syscontract.UnbondingDelegationEntry>}
 */
proto.syscontract.UnbondingDelegation.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.syscontract.UnbondingDelegationEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.syscontract.UnbondingDelegationEntry, 4));
};


/**
 * @param {!Array<!proto.syscontract.UnbondingDelegationEntry>} value
 * @return {!proto.syscontract.UnbondingDelegation} returns this
*/
proto.syscontract.UnbondingDelegation.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.syscontract.UnbondingDelegationEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.syscontract.UnbondingDelegationEntry}
 */
proto.syscontract.UnbondingDelegation.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.syscontract.UnbondingDelegationEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.syscontract.UnbondingDelegation} returns this
 */
proto.syscontract.UnbondingDelegation.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syscontract.UnbondingDelegationEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.syscontract.UnbondingDelegationEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syscontract.UnbondingDelegationEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.UnbondingDelegationEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    creationEpochId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    completionEpochId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syscontract.UnbondingDelegationEntry}
 */
proto.syscontract.UnbondingDelegationEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syscontract.UnbondingDelegationEntry;
  return proto.syscontract.UnbondingDelegationEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syscontract.UnbondingDelegationEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syscontract.UnbondingDelegationEntry}
 */
proto.syscontract.UnbondingDelegationEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreationEpochId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompletionEpochId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syscontract.UnbondingDelegationEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syscontract.UnbondingDelegationEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syscontract.UnbondingDelegationEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.UnbondingDelegationEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreationEpochId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCompletionEpochId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 creation_epoch_id = 1;
 * @return {number}
 */
proto.syscontract.UnbondingDelegationEntry.prototype.getCreationEpochId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.syscontract.UnbondingDelegationEntry} returns this
 */
proto.syscontract.UnbondingDelegationEntry.prototype.setCreationEpochId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 completion_epoch_id = 2;
 * @return {number}
 */
proto.syscontract.UnbondingDelegationEntry.prototype.getCompletionEpochId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.syscontract.UnbondingDelegationEntry} returns this
 */
proto.syscontract.UnbondingDelegationEntry.prototype.setCompletionEpochId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string amount = 3;
 * @return {string}
 */
proto.syscontract.UnbondingDelegationEntry.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.syscontract.UnbondingDelegationEntry} returns this
 */
proto.syscontract.UnbondingDelegationEntry.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.syscontract.ValidatorVector.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syscontract.ValidatorVector.prototype.toObject = function(opt_includeInstance) {
  return proto.syscontract.ValidatorVector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syscontract.ValidatorVector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.ValidatorVector.toObject = function(includeInstance, msg) {
  var f, obj = {
    vectorList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syscontract.ValidatorVector}
 */
proto.syscontract.ValidatorVector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syscontract.ValidatorVector;
  return proto.syscontract.ValidatorVector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syscontract.ValidatorVector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syscontract.ValidatorVector}
 */
proto.syscontract.ValidatorVector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addVector(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syscontract.ValidatorVector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syscontract.ValidatorVector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syscontract.ValidatorVector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.ValidatorVector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVectorList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string vector = 1;
 * @return {!Array<string>}
 */
proto.syscontract.ValidatorVector.prototype.getVectorList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.syscontract.ValidatorVector} returns this
 */
proto.syscontract.ValidatorVector.prototype.setVectorList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.syscontract.ValidatorVector} returns this
 */
proto.syscontract.ValidatorVector.prototype.addVector = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.syscontract.ValidatorVector} returns this
 */
proto.syscontract.ValidatorVector.prototype.clearVectorList = function() {
  return this.setVectorList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.syscontract.DelegationInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syscontract.DelegationInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.syscontract.DelegationInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syscontract.DelegationInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.DelegationInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    infosList: jspb.Message.toObjectList(msg.getInfosList(),
    proto.syscontract.Delegation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syscontract.DelegationInfo}
 */
proto.syscontract.DelegationInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syscontract.DelegationInfo;
  return proto.syscontract.DelegationInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syscontract.DelegationInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syscontract.DelegationInfo}
 */
proto.syscontract.DelegationInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.syscontract.Delegation;
      reader.readMessage(value,proto.syscontract.Delegation.deserializeBinaryFromReader);
      msg.addInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syscontract.DelegationInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syscontract.DelegationInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syscontract.DelegationInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syscontract.DelegationInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.syscontract.Delegation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Delegation infos = 1;
 * @return {!Array<!proto.syscontract.Delegation>}
 */
proto.syscontract.DelegationInfo.prototype.getInfosList = function() {
  return /** @type{!Array<!proto.syscontract.Delegation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.syscontract.Delegation, 1));
};


/**
 * @param {!Array<!proto.syscontract.Delegation>} value
 * @return {!proto.syscontract.DelegationInfo} returns this
*/
proto.syscontract.DelegationInfo.prototype.setInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.syscontract.Delegation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.syscontract.Delegation}
 */
proto.syscontract.DelegationInfo.prototype.addInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.syscontract.Delegation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.syscontract.DelegationInfo} returns this
 */
proto.syscontract.DelegationInfo.prototype.clearInfosList = function() {
  return this.setInfosList([]);
};


/**
 * @enum {number}
 */
proto.syscontract.DPoSStakeFunction = {
  GET_ALL_CANDIDATES: 0,
  GET_VALIDATOR_BY_ADDRESS: 1,
  DELEGATE: 2,
  GET_DELEGATIONS_BY_ADDRESS: 3,
  GET_USER_DELEGATION_BY_VALIDATOR: 4,
  UNDELEGATE: 5,
  READ_EPOCH_BY_ID: 6,
  READ_LATEST_EPOCH: 7,
  SET_NODE_ID: 8,
  GET_NODE_ID: 9,
  UPDATE_MIN_SELF_DELEGATION: 10,
  READ_MIN_SELF_DELEGATION: 11,
  UPDATE_EPOCH_VALIDATOR_NUMBER: 12,
  READ_EPOCH_VALIDATOR_NUMBER: 13,
  UPDATE_EPOCH_BLOCK_NUMBER: 14,
  READ_EPOCH_BLOCK_NUMBER: 15,
  READ_COMPLETE_UNBOUNDING_EPOCH_NUMBER: 16,
  READ_SYSTEM_CONTRACT_ADDR: 18
};

/**
 * @enum {number}
 */
proto.syscontract.BondStatus = {
  BONDED: 0,
  UNBONDING: 1,
  UNBONDED: 2
};

goog.object.extend(exports, proto.syscontract);
